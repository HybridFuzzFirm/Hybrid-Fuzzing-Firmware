# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plog.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='plog.proto',
  package='panda',
  serialized_pb=_b('\n\nplog.proto\x12\x05panda\"j\n\x08\x41sidInfo\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x0b\n\x03pid\x18\x03 \x02(\r\x12\x13\n\x0bstart_instr\x18\x04 \x02(\x04\x12\x11\n\tend_instr\x18\x05 \x02(\x04\x12\r\n\x05\x63ount\x18\x06 \x02(\x04\"\x19\n\tCallStack\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x03(\x04\"\x8b\x01\n\tDwarfCall\x12\x13\n\x0b\x66ile_callee\x18\x01 \x02(\t\x12\x1c\n\x14\x66unction_name_callee\x18\x02 \x02(\t\x12\x1a\n\x12line_number_callee\x18\x03 \x02(\x04\x12\x13\n\x0b\x66ile_caller\x18\x04 \x02(\t\x12\x1a\n\x12line_number_caller\x18\x05 \x02(\x04\"p\n\nSrcInfoPri\x12\x10\n\x08\x66ilename\x18\x01 \x02(\t\x12\x0f\n\x07linenum\x18\x02 \x02(\r\x12\x13\n\x0b\x61stnodename\x18\x03 \x02(\t\x12\x16\n\x0einsertionpoint\x18\x04 \x01(\r\x12\x12\n\nast_loc_id\x18\x05 \x01(\r\"i\n\x0e\x41ttackPointPri\x12\x0c\n\x04info\x18\x01 \x02(\r\x12$\n\ncall_stack\x18\x02 \x02(\x0b\x32\x10.panda.CallStack\x12#\n\x08src_info\x18\x03 \x02(\x0b\x32\x11.panda.SrcInfoPri\"\xbf\x01\n\rTaintQueryPri\x12\x0b\n\x03\x62uf\x18\x01 \x02(\x04\x12\x0b\n\x03len\x18\x02 \x02(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\r\x12\x13\n\x0bnum_tainted\x18\x04 \x02(\r\x12$\n\ncall_stack\x18\x05 \x02(\x0b\x32\x10.panda.CallStack\x12#\n\x08src_info\x18\x06 \x02(\x0b\x32\x11.panda.SrcInfoPri\x12&\n\x0btaint_query\x18\x07 \x03(\x0b\x32\x11.panda.TaintQuery\"6\n\x18TaintQueryUniqueLabelSet\x12\x0b\n\x03ptr\x18\x01 \x02(\x04\x12\r\n\x05label\x18\x02 \x03(\r\"m\n\x07SrcInfo\x12\x10\n\x08\x66ilename\x18\x01 \x02(\r\x12\x0f\n\x07linenum\x18\x02 \x02(\r\x12\x13\n\x0b\x61stnodename\x18\x03 \x02(\r\x12\x16\n\x0einsertionpoint\x18\x04 \x01(\r\x12\x12\n\nast_loc_id\x18\x05 \x01(\r\"q\n\nTaintQuery\x12\x0b\n\x03ptr\x18\x01 \x02(\x04\x12\x0b\n\x03tcn\x18\x02 \x02(\r\x12\x0e\n\x06offset\x18\x03 \x02(\r\x12\x39\n\x10unique_label_set\x18\x04 \x01(\x0b\x32\x1f.panda.TaintQueryUniqueLabelSet\"c\n\x0b\x41ttackPoint\x12\x0c\n\x04info\x18\x01 \x02(\r\x12$\n\ncall_stack\x18\x02 \x02(\x0b\x32\x10.panda.CallStack\x12 \n\x08src_info\x18\x03 \x02(\x0b\x32\x0e.panda.SrcInfo\"\xc2\x01\n\x13TaintQueryHypercall\x12\x0b\n\x03\x62uf\x18\x01 \x02(\x04\x12\x0b\n\x03len\x18\x02 \x02(\r\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\r\x12\x13\n\x0bnum_tainted\x18\x04 \x02(\r\x12$\n\ncall_stack\x18\x05 \x02(\x0b\x32\x10.panda.CallStack\x12 \n\x08src_info\x18\x06 \x02(\x0b\x32\x0e.panda.SrcInfo\x12&\n\x0btaint_query\x18\x07 \x03(\x0b\x32\x11.panda.TaintQuery\"]\n\rTaintedBranch\x12$\n\ncall_stack\x18\x01 \x02(\x0b\x32\x10.panda.CallStack\x12&\n\x0btaint_query\x18\x02 \x03(\x0b\x32\x11.panda.TaintQuery\"0\n\x14TaintedBranchSummary\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\n\n\x02pc\x18\x02 \x02(\x04\"\\\n\x0cTaintedInstr\x12$\n\ncall_stack\x18\x01 \x02(\x0b\x32\x10.panda.CallStack\x12&\n\x0btaint_query\x18\x02 \x03(\x0b\x32\x11.panda.TaintQuery\"/\n\x13TaintedInstrSummary\x12\x0c\n\x04\x61sid\x18\x01 \x02(\x04\x12\n\n\x02pc\x18\x02 \x02(\x04\"\xef\x05\n\x08LogEntry\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\r\n\x05instr\x18\x02 \x02(\x04\x12\"\n\tasid_info\x18( \x01(\x0b\x32\x0f.panda.AsidInfo\x12\x0c\n\x04\x61sid\x18\x03 \x01(\x04\x12$\n\ncall_stack\x18\n \x01(\x0b\x32\x10.panda.CallStack\x12$\n\ndwarf_call\x18\x42 \x01(\x0b\x32\x10.panda.DwarfCall\x12#\n\tdwarf_ret\x18\x43 \x01(\x0b\x32\x10.panda.DwarfCall\x12 \n\x18taint_label_virtual_addr\x18\x06 \x01(\x04\x12!\n\x19taint_label_physical_addr\x18\x07 \x01(\x04\x12\x1a\n\x12taint_label_number\x18\x08 \x01(\r\x12-\n\x0ftaint_query_pri\x18\x44 \x01(\x0b\x32\x14.panda.TaintQueryPri\x12/\n\x10\x61ttack_point_pri\x18\x45 \x01(\x0b\x32\x15.panda.AttackPointPri\x12-\n\x12pri_trace_src_info\x18\x46 \x01(\x0b\x32\x11.panda.SrcInfoPri\x12\x39\n\x15taint_query_hypercall\x18& \x01(\x0b\x32\x1a.panda.TaintQueryHypercall\x12(\n\x0c\x61ttack_point\x18\' \x01(\x0b\x32\x12.panda.AttackPoint\x12,\n\x0etainted_branch\x18$ \x01(\x0b\x32\x14.panda.TaintedBranch\x12;\n\x16tainted_branch_summary\x18H \x01(\x0b\x32\x1b.panda.TaintedBranchSummary\x12*\n\rtainted_instr\x18% \x01(\x0b\x32\x13.panda.TaintedInstr\x12\x39\n\x15tainted_instr_summary\x18\x38 \x01(\x0b\x32\x1a.panda.TaintedInstrSummary')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ASIDINFO = _descriptor.Descriptor(
  name='AsidInfo',
  full_name='panda.AsidInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.AsidInfo.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='panda.AsidInfo.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pid', full_name='panda.AsidInfo.pid', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_instr', full_name='panda.AsidInfo.start_instr', index=3,
      number=4, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_instr', full_name='panda.AsidInfo.end_instr', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='panda.AsidInfo.count', index=5,
      number=6, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=127,
)


_CALLSTACK = _descriptor.Descriptor(
  name='CallStack',
  full_name='panda.CallStack',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='panda.CallStack.addr', index=0,
      number=1, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=154,
)


_DWARFCALL = _descriptor.Descriptor(
  name='DwarfCall',
  full_name='panda.DwarfCall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_callee', full_name='panda.DwarfCall.file_callee', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='function_name_callee', full_name='panda.DwarfCall.function_name_callee', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='line_number_callee', full_name='panda.DwarfCall.line_number_callee', index=2,
      number=3, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_caller', full_name='panda.DwarfCall.file_caller', index=3,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='line_number_caller', full_name='panda.DwarfCall.line_number_caller', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=296,
)


_SRCINFOPRI = _descriptor.Descriptor(
  name='SrcInfoPri',
  full_name='panda.SrcInfoPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='panda.SrcInfoPri.filename', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linenum', full_name='panda.SrcInfoPri.linenum', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='astnodename', full_name='panda.SrcInfoPri.astnodename', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='insertionpoint', full_name='panda.SrcInfoPri.insertionpoint', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ast_loc_id', full_name='panda.SrcInfoPri.ast_loc_id', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=410,
)


_ATTACKPOINTPRI = _descriptor.Descriptor(
  name='AttackPointPri',
  full_name='panda.AttackPointPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='panda.AttackPointPri.info', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.AttackPointPri.call_stack', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.AttackPointPri.src_info', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=412,
  serialized_end=517,
)


_TAINTQUERYPRI = _descriptor.Descriptor(
  name='TaintQueryPri',
  full_name='panda.TaintQueryPri',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buf', full_name='panda.TaintQueryPri.buf', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='panda.TaintQueryPri.len', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='panda.TaintQueryPri.data', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_tainted', full_name='panda.TaintQueryPri.num_tainted', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintQueryPri.call_stack', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.TaintQueryPri.src_info', index=5,
      number=6, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintQueryPri.taint_query', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=520,
  serialized_end=711,
)


_TAINTQUERYUNIQUELABELSET = _descriptor.Descriptor(
  name='TaintQueryUniqueLabelSet',
  full_name='panda.TaintQueryUniqueLabelSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ptr', full_name='panda.TaintQueryUniqueLabelSet.ptr', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label', full_name='panda.TaintQueryUniqueLabelSet.label', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=713,
  serialized_end=767,
)


_SRCINFO = _descriptor.Descriptor(
  name='SrcInfo',
  full_name='panda.SrcInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='panda.SrcInfo.filename', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linenum', full_name='panda.SrcInfo.linenum', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='astnodename', full_name='panda.SrcInfo.astnodename', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='insertionpoint', full_name='panda.SrcInfo.insertionpoint', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ast_loc_id', full_name='panda.SrcInfo.ast_loc_id', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=769,
  serialized_end=878,
)


_TAINTQUERY = _descriptor.Descriptor(
  name='TaintQuery',
  full_name='panda.TaintQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ptr', full_name='panda.TaintQuery.ptr', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tcn', full_name='panda.TaintQuery.tcn', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='panda.TaintQuery.offset', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unique_label_set', full_name='panda.TaintQuery.unique_label_set', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=880,
  serialized_end=993,
)


_ATTACKPOINT = _descriptor.Descriptor(
  name='AttackPoint',
  full_name='panda.AttackPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='panda.AttackPoint.info', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.AttackPoint.call_stack', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.AttackPoint.src_info', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=995,
  serialized_end=1094,
)


_TAINTQUERYHYPERCALL = _descriptor.Descriptor(
  name='TaintQueryHypercall',
  full_name='panda.TaintQueryHypercall',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='buf', full_name='panda.TaintQueryHypercall.buf', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='panda.TaintQueryHypercall.len', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='panda.TaintQueryHypercall.data', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_tainted', full_name='panda.TaintQueryHypercall.num_tainted', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintQueryHypercall.call_stack', index=4,
      number=5, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='src_info', full_name='panda.TaintQueryHypercall.src_info', index=5,
      number=6, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintQueryHypercall.taint_query', index=6,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1097,
  serialized_end=1291,
)


_TAINTEDBRANCH = _descriptor.Descriptor(
  name='TaintedBranch',
  full_name='panda.TaintedBranch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintedBranch.call_stack', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintedBranch.taint_query', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1293,
  serialized_end=1386,
)


_TAINTEDBRANCHSUMMARY = _descriptor.Descriptor(
  name='TaintedBranchSummary',
  full_name='panda.TaintedBranchSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.TaintedBranchSummary.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.TaintedBranchSummary.pc', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1388,
  serialized_end=1436,
)


_TAINTEDINSTR = _descriptor.Descriptor(
  name='TaintedInstr',
  full_name='panda.TaintedInstr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.TaintedInstr.call_stack', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query', full_name='panda.TaintedInstr.taint_query', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1438,
  serialized_end=1530,
)


_TAINTEDINSTRSUMMARY = _descriptor.Descriptor(
  name='TaintedInstrSummary',
  full_name='panda.TaintedInstrSummary',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.TaintedInstrSummary.asid', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.TaintedInstrSummary.pc', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1532,
  serialized_end=1579,
)


_LOGENTRY = _descriptor.Descriptor(
  name='LogEntry',
  full_name='panda.LogEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pc', full_name='panda.LogEntry.pc', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instr', full_name='panda.LogEntry.instr', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asid_info', full_name='panda.LogEntry.asid_info', index=2,
      number=40, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asid', full_name='panda.LogEntry.asid', index=3,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_stack', full_name='panda.LogEntry.call_stack', index=4,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dwarf_call', full_name='panda.LogEntry.dwarf_call', index=5,
      number=66, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dwarf_ret', full_name='panda.LogEntry.dwarf_ret', index=6,
      number=67, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_virtual_addr', full_name='panda.LogEntry.taint_label_virtual_addr', index=7,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_physical_addr', full_name='panda.LogEntry.taint_label_physical_addr', index=8,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_label_number', full_name='panda.LogEntry.taint_label_number', index=9,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query_pri', full_name='panda.LogEntry.taint_query_pri', index=10,
      number=68, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attack_point_pri', full_name='panda.LogEntry.attack_point_pri', index=11,
      number=69, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pri_trace_src_info', full_name='panda.LogEntry.pri_trace_src_info', index=12,
      number=70, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='taint_query_hypercall', full_name='panda.LogEntry.taint_query_hypercall', index=13,
      number=38, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attack_point', full_name='panda.LogEntry.attack_point', index=14,
      number=39, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_branch', full_name='panda.LogEntry.tainted_branch', index=15,
      number=36, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_branch_summary', full_name='panda.LogEntry.tainted_branch_summary', index=16,
      number=72, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_instr', full_name='panda.LogEntry.tainted_instr', index=17,
      number=37, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tainted_instr_summary', full_name='panda.LogEntry.tainted_instr_summary', index=18,
      number=56, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1582,
  serialized_end=2333,
)

_ATTACKPOINTPRI.fields_by_name['call_stack'].message_type = _CALLSTACK
_ATTACKPOINTPRI.fields_by_name['src_info'].message_type = _SRCINFOPRI
_TAINTQUERYPRI.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTQUERYPRI.fields_by_name['src_info'].message_type = _SRCINFOPRI
_TAINTQUERYPRI.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTQUERY.fields_by_name['unique_label_set'].message_type = _TAINTQUERYUNIQUELABELSET
_ATTACKPOINT.fields_by_name['call_stack'].message_type = _CALLSTACK
_ATTACKPOINT.fields_by_name['src_info'].message_type = _SRCINFO
_TAINTQUERYHYPERCALL.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTQUERYHYPERCALL.fields_by_name['src_info'].message_type = _SRCINFO
_TAINTQUERYHYPERCALL.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTEDBRANCH.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTEDBRANCH.fields_by_name['taint_query'].message_type = _TAINTQUERY
_TAINTEDINSTR.fields_by_name['call_stack'].message_type = _CALLSTACK
_TAINTEDINSTR.fields_by_name['taint_query'].message_type = _TAINTQUERY
_LOGENTRY.fields_by_name['asid_info'].message_type = _ASIDINFO
_LOGENTRY.fields_by_name['call_stack'].message_type = _CALLSTACK
_LOGENTRY.fields_by_name['dwarf_call'].message_type = _DWARFCALL
_LOGENTRY.fields_by_name['dwarf_ret'].message_type = _DWARFCALL
_LOGENTRY.fields_by_name['taint_query_pri'].message_type = _TAINTQUERYPRI
_LOGENTRY.fields_by_name['attack_point_pri'].message_type = _ATTACKPOINTPRI
_LOGENTRY.fields_by_name['pri_trace_src_info'].message_type = _SRCINFOPRI
_LOGENTRY.fields_by_name['taint_query_hypercall'].message_type = _TAINTQUERYHYPERCALL
_LOGENTRY.fields_by_name['attack_point'].message_type = _ATTACKPOINT
_LOGENTRY.fields_by_name['tainted_branch'].message_type = _TAINTEDBRANCH
_LOGENTRY.fields_by_name['tainted_branch_summary'].message_type = _TAINTEDBRANCHSUMMARY
_LOGENTRY.fields_by_name['tainted_instr'].message_type = _TAINTEDINSTR
_LOGENTRY.fields_by_name['tainted_instr_summary'].message_type = _TAINTEDINSTRSUMMARY
DESCRIPTOR.message_types_by_name['AsidInfo'] = _ASIDINFO
DESCRIPTOR.message_types_by_name['CallStack'] = _CALLSTACK
DESCRIPTOR.message_types_by_name['DwarfCall'] = _DWARFCALL
DESCRIPTOR.message_types_by_name['SrcInfoPri'] = _SRCINFOPRI
DESCRIPTOR.message_types_by_name['AttackPointPri'] = _ATTACKPOINTPRI
DESCRIPTOR.message_types_by_name['TaintQueryPri'] = _TAINTQUERYPRI
DESCRIPTOR.message_types_by_name['TaintQueryUniqueLabelSet'] = _TAINTQUERYUNIQUELABELSET
DESCRIPTOR.message_types_by_name['SrcInfo'] = _SRCINFO
DESCRIPTOR.message_types_by_name['TaintQuery'] = _TAINTQUERY
DESCRIPTOR.message_types_by_name['AttackPoint'] = _ATTACKPOINT
DESCRIPTOR.message_types_by_name['TaintQueryHypercall'] = _TAINTQUERYHYPERCALL
DESCRIPTOR.message_types_by_name['TaintedBranch'] = _TAINTEDBRANCH
DESCRIPTOR.message_types_by_name['TaintedBranchSummary'] = _TAINTEDBRANCHSUMMARY
DESCRIPTOR.message_types_by_name['TaintedInstr'] = _TAINTEDINSTR
DESCRIPTOR.message_types_by_name['TaintedInstrSummary'] = _TAINTEDINSTRSUMMARY
DESCRIPTOR.message_types_by_name['LogEntry'] = _LOGENTRY

AsidInfo = _reflection.GeneratedProtocolMessageType('AsidInfo', (_message.Message,), dict(
  DESCRIPTOR = _ASIDINFO,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AsidInfo)
  ))
_sym_db.RegisterMessage(AsidInfo)

CallStack = _reflection.GeneratedProtocolMessageType('CallStack', (_message.Message,), dict(
  DESCRIPTOR = _CALLSTACK,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.CallStack)
  ))
_sym_db.RegisterMessage(CallStack)

DwarfCall = _reflection.GeneratedProtocolMessageType('DwarfCall', (_message.Message,), dict(
  DESCRIPTOR = _DWARFCALL,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.DwarfCall)
  ))
_sym_db.RegisterMessage(DwarfCall)

SrcInfoPri = _reflection.GeneratedProtocolMessageType('SrcInfoPri', (_message.Message,), dict(
  DESCRIPTOR = _SRCINFOPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SrcInfoPri)
  ))
_sym_db.RegisterMessage(SrcInfoPri)

AttackPointPri = _reflection.GeneratedProtocolMessageType('AttackPointPri', (_message.Message,), dict(
  DESCRIPTOR = _ATTACKPOINTPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AttackPointPri)
  ))
_sym_db.RegisterMessage(AttackPointPri)

TaintQueryPri = _reflection.GeneratedProtocolMessageType('TaintQueryPri', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYPRI,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryPri)
  ))
_sym_db.RegisterMessage(TaintQueryPri)

TaintQueryUniqueLabelSet = _reflection.GeneratedProtocolMessageType('TaintQueryUniqueLabelSet', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYUNIQUELABELSET,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryUniqueLabelSet)
  ))
_sym_db.RegisterMessage(TaintQueryUniqueLabelSet)

SrcInfo = _reflection.GeneratedProtocolMessageType('SrcInfo', (_message.Message,), dict(
  DESCRIPTOR = _SRCINFO,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.SrcInfo)
  ))
_sym_db.RegisterMessage(SrcInfo)

TaintQuery = _reflection.GeneratedProtocolMessageType('TaintQuery', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQuery)
  ))
_sym_db.RegisterMessage(TaintQuery)

AttackPoint = _reflection.GeneratedProtocolMessageType('AttackPoint', (_message.Message,), dict(
  DESCRIPTOR = _ATTACKPOINT,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.AttackPoint)
  ))
_sym_db.RegisterMessage(AttackPoint)

TaintQueryHypercall = _reflection.GeneratedProtocolMessageType('TaintQueryHypercall', (_message.Message,), dict(
  DESCRIPTOR = _TAINTQUERYHYPERCALL,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintQueryHypercall)
  ))
_sym_db.RegisterMessage(TaintQueryHypercall)

TaintedBranch = _reflection.GeneratedProtocolMessageType('TaintedBranch', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDBRANCH,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedBranch)
  ))
_sym_db.RegisterMessage(TaintedBranch)

TaintedBranchSummary = _reflection.GeneratedProtocolMessageType('TaintedBranchSummary', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDBRANCHSUMMARY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedBranchSummary)
  ))
_sym_db.RegisterMessage(TaintedBranchSummary)

TaintedInstr = _reflection.GeneratedProtocolMessageType('TaintedInstr', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDINSTR,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedInstr)
  ))
_sym_db.RegisterMessage(TaintedInstr)

TaintedInstrSummary = _reflection.GeneratedProtocolMessageType('TaintedInstrSummary', (_message.Message,), dict(
  DESCRIPTOR = _TAINTEDINSTRSUMMARY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.TaintedInstrSummary)
  ))
_sym_db.RegisterMessage(TaintedInstrSummary)

LogEntry = _reflection.GeneratedProtocolMessageType('LogEntry', (_message.Message,), dict(
  DESCRIPTOR = _LOGENTRY,
  __module__ = 'plog_pb2'
  # @@protoc_insertion_point(class_scope:panda.LogEntry)
  ))
_sym_db.RegisterMessage(LogEntry)


# @@protoc_insertion_point(module_scope)
